



public class Program{
    public static void main(String[] args) {
        /*
        Строки - объекты хранящие набор символов
        В отличии от массивов строки можно изменять
        В конце каждой строки есть \0
        Для строк характерно то что обозначаются они через ""
        */
        /*
        Виды строк:
            String - состоит из char. Не изменяемый обьект
                Обозначение: "текст"

            StringBuffer - состоит из char. Изменяемый обьект. Безопасен в многопотоке
                Обозначение: "текст"

            StringBuilder - состоит из char. Изменяемый обьект. Не безопасен в многопотоке
                Обозначение: "текст"
        */
        String name = "long string"; // Так создается переменная с текстом
        System.out.println("name = " + name); // Вывод текста
        name = "Alex"; // Уже созданной переменной даем новое значение
        System.out.println("name = " + name); // Вывод текста

        StringBuffer string_chaing = new StringBuffer("long string"); // Создание изменяемой строки
        /*Иные способы инициализации:
            StringBuffer() / StringBuilder()
            StringBuffer(int capacity) / StringBuilder(int capacity)
            StringBuffer(String str) / StringBuilder(String str)
            StringBuffer(CharSequence chars) / StringBuilder(CharSequence chars)
        */
        System.out.println("name = " + string_chaing); // Вывод текста
        string_chaing = new StringBuffer("Alex"); // Уже созданной переменной даем новое значение
        System.out.println("name = " + string_chaing); // Вывод текста


        // Касается только StringBuffer /  StringBuilder
        System.out.println("\n\tИзменение строки"); 

        string_chaing.append(" Merfi"); // Добавление текста в конец строки
        // string_chaing.append(" ").append("Merfi"); // Можно добавлять по цепочке
        System.out.println("string_chaing после добавления подстроки: " + string_chaing);
        string_chaing.insert(4, "Name Carl Lon", 4, 9); // Вставка подстроки
        /* Содержит следующие аргументы
        "обьект к которому применяем".insert(индекс_с_которого_начать(для_обьекта), "что_вставить", 
            с_какого_индекса_начать_обрезать_вставляемый_результат, с_какого_индекса_закончить_обрезать_вставляемый_результат
        );
        с_какого_индекса_начать_обрезать_вставляемый_результат, с_какого_индекса_закончить_обрезать_вставляемый_результат - не обязательные аргументы
        */
        System.out.println("string_chaing после вставки подстроки: " + string_chaing);
        string_chaing.replace(4, 15, " Merfi"); // Замена подстроки
        /* Содержит следующие аргументы
        "обьект к которому применяем".replace(индекс_с_которого_начать(для_обьекта), 
            с_какого_индекса_закончить(для_обьекта), "на_что_заменить"
        )
        с_какого_индекса_закончить(для_обьекта) - при неправильном значении возьмет все что будет в строке
        */
        System.out.println("string_chaing после замены подстроки: " + string_chaing);
        string_chaing.delete(4, 10); // Удаление подстроки
        /* Содержит следующие аргументы
        "обьект к которому применяем".erase(индекс_с_которого_начать(для_обьекта), 
             с_какого_индекса_закончить(для_обьекта)
        )
        с_какого_индекса_закончить(для_обьекта) - при неправильном значении возьмет все что будет в строке
        */
        System.out.println("string_chaing после удаления подстроки: " + string_chaing);


        // Работает для всех
        System.out.println("\n\tВзаимодействие со строками"); 

        System.out.println("Определение размера строки (количество символов) = " + name.length()); 
        System.out.println("Конкатенация строк: " + "Name = " + name);


        System.out.println("\n\tВзаимодействие с подстроками"); 
    
        System.out.println("Получение подстроки: " + name.substring(1, 3)); 
        // Первый параметр представляет индекс, с которого начинается подстрока. Второй параметр - индекс, которым заканчивается подстрока (если второго параметра нет, то до конца)
        System.out.println("Поиск подстроки с начала строки: " + name.indexOf("le")); 
        System.out.println("Подстрока не найдена: " + (name.indexOf("no") == -1)); 
        System.out.println("Поиск подстроки с конца строки: " + name.lastIndexOf("ex")); 
        System.out.println("Подстрока не найдена: " + (name.lastIndexOf("no") == -1)); 

    
        System.out.println("\n\tПроверка начала и конца строки"); 
        System.out.println("Проверка начала строки на совпадание с другой строкой: " + name.startsWith("Al")); 
        System.out.println("Проверка конца строки на совпадание с другой строкой: " + name.endsWith("ex")); 
    


        System.out.println("\n\tЛогические операции:");
        /* Логические операции:
            >  - вернет true если:
                левая строка > по количеству символов правой 
                при одинаковой длине код символов левой строки > кода символа правой строки
    
            >=  - вернет true если:
                левая строка >= по количеству символов правой 
                при одинаковой длине код символов левой строки >= кода символа правой строки
    
            <  - вернет true если:
                левая строка < по количеству символов правой 
                при одинаковой длине код символов левой строки < кода символа правой строки
    
            <= - вернет true если:
                левая строка <= по количеству символов правой 
                при одинаковой длине код символов левой строки <= кода символа правой строки
    
            == - вернет true если строки одинаковые
            != - вернет true если строки не одинаковые
    
            "текущая строка".compare("строка с которой сравниваем") вернет:
                0 - строки равны
                больше 0 - текущая строка больше
                меньше 0 -  текущая строка меньше
        */
        System.out.println("Логические операция == : " + (name == "Alex"));


        System.out.println("\n\tИтерация строки:");
        System.out.print("Вывод name через цикл по символам: ");
        for (int i = 0; i < name.length(); i += 1){
            System.out.print(name.substring(i));
        }
        System.out.println();



        String age;
        System.out.println("\n\tПеревод обьектов в строку"); 
        {
            int numer_age = 98;
            age = ((Object)numer_age).toString(); // переводим число в строку
        }
        System.out.println("Число переделанное в строку = " + age);

    
    }
}


